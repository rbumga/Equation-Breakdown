# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\rober\PycharmProjects\EquationBreakdown\Classes\UI\MC_Preview_Frame.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import random


class PreviewFrameMC:
    def __init__(self, parent, question_title, question_text_html, answers, solution_value, solution_unit, solution_text=None,
                 hints=None):
        self.parent = parent
        self.question_title = question_title
        self.question_text_html = question_text_html
        random.shuffle(answers)
        self.answer_tuples_list = answers
        self.solution_text = solution_text
        self.solution_value = solution_value
        self.hint = hints
        self.parent_layout = self.parent.layout()
        min_expand_size_policy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding,
                                                 QtWidgets.QSizePolicy.MinimumExpanding)
        if not self.parent_layout:
            new_layout = QtWidgets.QVBoxLayout()
            self.parent.setLayout(new_layout)
            self.parent_layout = self.parent.layout()
        self.question_frame = QtWidgets.QFrame()
        self.question_frame.setSizePolicy(min_expand_size_policy)
        self.parent_layout.addWidget(self.question_frame)
        self.question_frame_layout = QtWidgets.QVBoxLayout()
        self.question_frame.setLayout(self.question_frame_layout)
        self.question_title_label = QtWidgets.QLabel(self.question_frame)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.question_title_label.setFont(font)
        self.question_title_label.setObjectName("question_title_label")
        self.question_frame_layout.addWidget(self.question_title_label)
        self.question_text_textBrowser = QtWidgets.QTextBrowser(self.parent)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.question_text_textBrowser.setFont(font)
        self.question_text_textBrowser.setObjectName("question_text_textBrowser")
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        self.question_text_textBrowser.setSizePolicy(sizePolicy)
        self.question_text_textBrowser.insertHtml(self.question_text_html)
        self.question_text_textBrowser.setToolTip(self.hint)
        self.question_frame_layout.addWidget(self.question_text_textBrowser)
        self.answer_groupBox = QtWidgets.QGroupBox(self.parent)
        self.answer_groupBox.setObjectName("answer_groupBox")
        self.question_frame_layout.addWidget(self.answer_groupBox)
        self.question_title_label.setText(self.question_title)
        self.answer_groupBox.setTitle("Answers")
        self.answer_groupBox_layout = QtWidgets.QVBoxLayout()
        self.answer_groupBox.setLayout(self.answer_groupBox_layout)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        self.answer_groupBox.setSizePolicy(min_expand_size_policy)
        self.answer_radio_buttons = []
        for i in range(len(self.answer_tuples_list)):
            radio_button = QtWidgets.QRadioButton("{} {}".format(self.answer_tuples_list[i][0], self.answer_tuples_list[i][1]))
            radio_button.setObjectName("answer_{}".format(i))
            if self.answer_tuples_list[i][0] == solution_value and self.answer_tuples_list[i][1] == solution_unit:
                tooltip_string = "Correct Answer\nhint:{}\nfeedback:{}\nsolution:{}".format(hints, self.answer_tuples_list[i][2], solution_text)
                radio_button.setToolTip(tooltip_string)
            else:
                tooltip_string = "feedback:{}".format(self.answer_tuples_list[i][2])
                radio_button.setToolTip(tooltip_string)
            self.answer_groupBox_layout.addWidget(radio_button)
            self.answer_radio_buttons.append(radio_button)
